name: Deploy to Production

on:
  workflow_dispatch:  # 允许手动触发该工作流

jobs:
  deploy:
    runs-on: ubuntu-latest  # 使用最新版本的 Ubuntu

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤 2: 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # 使用 Node.js 14

      # 步骤 3: 安装依赖
      - name: Install dependencies
        run: |
          echo "开始安装依赖"
          npm i
          echo "依赖安装完成"

      # 步骤 4: 构建项目
      - name: Build project
        run: npm run build:prod

      # 步骤 5: 将构建后的文件上传到生产服务器
      - name: Upload dist files to production server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.PROD_SERVER_IP }}  # 生产服务器的 IP 地址
          username: ${{ secrets.PROD_SERVER_USER }}  # 生产服务器的用户名
          key: ${{ secrets.c }}  # 生产服务器的 SSH 私钥
          port: 22  # 生产服务器的 SSH 端口
          source: "dist/*"  # 构建后的文件路径
          target: "/path/to/production/directory"  # 生产服务器目标路径

      - name: Restart nginx on server
        uses: appleboy/ssh-action@v1.0.0  # 第六步：通过 SSH 重启服务器上的 nginx 服务
        with:
          host: ${{ secrets.PROD_SERVER_IP }}  # 服务器 IP，从 GitHub Secrets 获取
          username: ${{ secrets.PROD_SERVER_USER }}  # 服务器用户名，从 GitHub Secrets 获取
          key: ${{ secrets.PROD_SERVER_USER }}  # SSH 私钥，从 GitHub Secrets 获取
          port: 22  # 服务器 SSH 端口
          script: sudo systemctl restart nginx  # 远程执行 nginx 重启命令
